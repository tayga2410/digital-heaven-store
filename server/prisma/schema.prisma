// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  img      String?
  parentId String?    @db.ObjectId
  parent   Category?  @relation("CategoryToCategory", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children Category[] @relation("CategoryToCategory")

  specSchema Json?

  products Product[]
}

model Product {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  price      Float
  img        String
  categoryId String?    @db.ObjectId
  category   Category?  @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  brandName  String?
  specs      Json?
  createdAt  DateTime   @default(now())
  Wishlist   Wishlist[]
}

model Wishlist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
}
